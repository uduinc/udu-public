exports = module.exports = {
	id : 'com.udu-dev.keywords_from_string',
	input : [ 'string_for_keywords' ],
	output : [ 'keywords_from_string' ],
	input_optional : [],
	output_optional : [],
	init : function ( ) {
		this.gramophone = this.require( 'gramophone' );
	},
	process : function(req)
	{
		let stopWords = ["a","apos","a’s","a's","able","about","above","according","accordingly","across","actually","after","afterwards","again","against","ain’t","ain't","all","allow","allows","almost","alone","along","already","also","although","always","am","among","amongst","an","and","another","any","anybody","anyhow","anyone","anything","anyway","anyways","anywhere","apart","appear","appreciate","appropriate","are","aren’t","aren't","around","as","aside","ask","asking","associated","at","available","away","awfully","be","became","because","become","becomes","becoming","been","before","beforehand","behind","being","believe","below","beside","besides","best","better","between","beyond","both","brief","but","by","c’mon","c'mon","c’s","c's","came","can","can’t","can't","cannot","cant","cause","causes","certain","certainly","changes","clearly","co","com","come","comes","concerning","consequently","consider","considering","contain","containing","contains","corresponding","could","couldn’t","couldn't","course","’course","'course","currently","definitely","described","despite","did","didn’t","didn't","different","do","does","doesn’t","doesn't","doing","don’t","don't","done","down","downwards","during","each","edu","eg","eight","either","else","elsewhere","enough","entirely","especially","et","etc","even","ever","every","everybody","everyone","everything","everywhere","ex","exactly","example","except","far","few","fifth","first","five","followed","following","follows","for","former","formerly","forth","four","from","further","furthermore","get","gets","getting","given","gives","go","goes","going","gone","got","gotten","greetings","had","hadn’t","hadn't","happens","hardly","has","hasn’t","hasn't","have","haven’t","haven't","having","he","he’d","he'd","he’ll","he'll","he’s","he's","hello","help","hence","her","here","here’s","here's","hereafter","hereby","herein","hereupon","hers","herself","hi","him","himself","his","hither","hopefully","how","how’s","how's","howbeit","however","i","i’d","i'd","i’ll","i'll","i’m","i'm","i’ve","i've","ie","if","ignored","immediate","in","inasmuch","inc","indeed","indicate","indicated","indicates","inner","insofar","instead","into","inward","is","isn’t","isn't","it","it’d","it'd","it’ll","it'll","it’s","it's","its","itself","just","keep","keeps","kept","know","knows","known","last","lately","later","latter","latterly","least","less","lest","let","let’s","let's","like","liked","likely","little","look","looking","looks","ltd","mainly","many","may","maybe","me","mean","meanwhile","merely","might","more","moreover","most","mostly","much","must","mustn’t","mustn't","must’ve","must've","my","myself","name","namely","nd","near","nearly","necessary","need","needs","neither","never","nevertheless","new","next","nine","no","nobody","non","none","noone","nor","normally","not","nothing","novel","now","nowhere","obviously","of","off","often","oh","ok","okay","old","on","once","one","ones","only","onto","or","other","others","otherwise","ought","our","ours","ourselves","out","outside","over","overall","own","particular","particularly","per","perhaps","placed","please","plus","possible","presumably","probably","provides","que","quite","qv","rather","rd","re","really","reasonably","regarding","regardless","regards","relatively","respectively","right","said","same","saw","say","saying","says","second","secondly","see","seeing","seem","seemed","seeming","seems","seen","self","selves","sensible","sent","serious","seriously","seven","several","shall","shan’t","shan't","she","she’d","she'd","she’ll","she'll","she’s","she's","should","shouldn’t","shouldn't","since","six","so","some","somebody","somehow","someone","something","sometime","sometimes","somewhat","somewhere","soon","sorry","specified","specify","specifying","still","sub","such","sup","sure","t’s","t's","take","taken","tell","tends","th","than","thank","thanks","thanx","that","that’s","that's","thats","the","their","theirs","them","themselves","then","thence","there","there’s","there's","thereafter","thereby","therefore","therein","theres","thereupon","these","they","they’d","they'd","they’ll","they'll","they’re","they're","they’ve","they've","think","third","this","thorough","thoroughly","those","though","three","through","throughout","thru","thus","to","together","too","took","toward","towards","tried","tries","truly","try","trying","twice","two","un","under","unfortunately","unless","unlikely","until","unto","up","upon","us","use","used","useful","uses","using","usually","value","various","very","via","viz","vs","want","wants","was","wasn’t","wasn't","way","we","we’d","we'd","we’ll","we'll","we’re","we're","we’ve","we've","welcome","well","went","were","weren’t","weren't","what","what’s","what's","whatever","when","when’s","when's","whence","whenever","where","where’d","where'd","where’s","where's","whereafter","whereas","whereby","wherein","whereupon","wherever","whether","which","while","whither","who","who’s","who's","whoever","whole","whom","whose","why","why’s","why's","will","willing","wish","with","within","without","won’t","won't","wonder","would","would","wouldn’t","wouldn't","yes","yet","you","you’d","you'd","you’ll","you'll","you’re","you're","you’ve","you've","your","yours","yourself","yourselves","zero"];
		let keyPhrases = this.gramophone.extract( 
			req.string_for_keywords, //string to extract keywords from
			{ 
				score: true, //get frequencies of keywords
				min: 1, //minimum frequency for inclusion
				stopWords: stopWords, //stopwords to exclude
				ngrams: [1, 2], //types of ngrams to include (ie number of words per "keyword")
				tokenizer: /[^a-zA-Z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u024F\u1E00-\u1EFF']+/g, //tokenizing regex
				gaps: true, //this tells it whether the tokenizer is to be used on determining gaps (ie non-keywords) or the keywords themselves 
				ignoreDefaultStopWords: true //package has its own list of default stopwords that you may not want to use
			} 
		);
		//output is an ordered array (based on frequency) of objects containing term and tf (term frequency) if scoring is used
		//if score is false, it is an array of strings in sorted order based on tf
		this.mutate({
			keywords_from_string: keyPhrases 
		});
	}
}
